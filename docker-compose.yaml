services:
  api:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - MONGO_URI=mongodb://mongo:27017
      - CELERY_BROKER_URL=redis://redis:6379/0
      - SECRET_KEY=${SECRET_KEY:-your-secret-key}
    depends_on:
      mongo:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: uv run --no-project uvicorn main:app --host 0.0.0.0 --port 8000
    networks:
      - sigmora-net

  mongo:
    image: mongo:latest
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.runCommand('ping').ok"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - sigmora-net

  redis:
    image: redis:latest
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - sigmora-net

  celery:
    build:
      context: .
      dockerfile: Dockerfile
    command: uv run --no-project celery -A tasks worker --loglevel=info --pool=solo
    depends_on:
      mongo:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      - MONGO_URI=mongodb://mongo:27017
      - CELERY_BROKER_URL=redis://redis:6379/0
    networks:
      - sigmora-net

  celery-beat:
    build:
      context: .
      dockerfile: Dockerfile
    command: uv run --no-project celery -A tasks beat --loglevel=info
    depends_on:
      mongo:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      - MONGO_URI=mongodb://mongo:27017
      - CELERY_BROKER_URL=redis://redis:6379/0
    networks:
      - sigmora-net

volumes:
  mongo_data:

networks:
  sigmora-net:
    driver: bridge